var N=null,E="",T="t",U="u",searchIndex={};
var R=["tojson","template","handlebarsengine","source","sourceerror","handlebars","result","response","ironerror","try_from","try_into","borrow_mut","cloneany","type_id","borrow","typeid","formatter","request","ironresult","HandlebarsEngine","SourceError","DirectorySource","MemorySource","Template"];

searchIndex["handlebars_iron"]={"doc":"Handlebars for Iron","i":[[3,R[19],"handlebars_iron","The handlebars template engine",N,N],[12,"sources",E,E,0,N],[12,"registry",E,E,0,N],[3,R[23],E,E,N,N],[3,R[20],E,E,N,N],[12,"cause",E,E,1,N],[3,R[21],E,E,N,N],[12,"prefix",E,E,2,N],[12,"suffix",E,E,2,N],[3,R[22],E,E,N,N],[12,"0",E,E,3,N],[11,"new",E,"render some template from pre-registered templates",4,[[[R[0]],["str"]],[R[1]]]],[11,"with",E,"render some template with temporary template string",4,[[[R[0]],["str"]],[R[1]]]],[11,"new",E,"create a handlebars template engine",0,[[],[R[2]]]],[11,"from",E,"create a handlebars template engine from existed…",0,[[[R[5]]],[R[2]]]],[11,"add",E,"add a template source",0,[[["self"],["box",[R[3]]],[R[3]]]]],[11,"reload",E,"load template from registered sources",0,[[["self"]],[[R[6],[R[4]]],[R[4]]]]],[11,"handlebars_mut",E,"access internal handlebars registry, useful to register…",0,[[["self"]],[["rwlockwriteguard",["box"]],["box",[R[5]]]]]],[11,"new",E,E,2,[[["str"],["p"]],["directorysource"]]],[8,"Source",E,E,N,N],[10,"load",E,E,5,[[["self"],[R[5]]],[[R[6],[R[4]]],[R[4]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[[U]],[R[6]]]],[11,R[10],E,E,0,[[],[R[6]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[15]]]],[11,"after",E,E,0,[[["self"],[R[7]],[R[17]]],[[R[8]],[R[6],[R[7],R[8]]],[R[7]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"to_owned",E,E,4,[[["self"]],[T]]],[11,"clone_into",E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,R[9],E,E,4,[[[U]],[R[6]]]],[11,R[10],E,E,4,[[],[R[6]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[15]]]],[11,"clone_any",E,E,4,[[["self"]],[[R[12]],["box",[R[12]]]]]],[11,"clone_any_send",E,E,4,[[["self"]],[["box",[R[12]]],[R[12]]]]],[11,"clone_any_sync",E,E,4,[[["self"]],[[R[12]],["box",[R[12]]]]]],[11,"clone_any_send_sync",E,E,4,[[["self"]],[[R[12]],["box",[R[12]]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"to_string",E,E,1,[[["self"]],["string"]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[[U]],[R[6]]]],[11,R[10],E,E,1,[[],[R[6]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[15]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[[U]],[R[6]]]],[11,R[10],E,E,2,[[],[R[6]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[15]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[[U]],[R[6]]]],[11,R[10],E,E,3,[[],[R[6]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[15]]]],[11,"load",E,E,2,[[["self"],[R[5]]],[[R[6],[R[4]]],[R[4]]]]],[11,"load",E,E,3,[[["self"],[R[5]]],[[R[6],[R[4]]],[R[4]]]]],[11,"from",E,E,1,[[["templateerror"]],[R[4]]]],[11,"from",E,E,1,[[["templatefileerror"]],[R[4]]]],[11,"clone",E,E,4,[[["self"]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[6]]]],[11,"description",E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[["option",["error"]],["error"]]]],[11,"modify",E,E,4,[[[R[7]]]]],[11,"after",E,E,0,[[["self"],[R[7]],[R[17]]],[[R[7]],[R[18],[R[7]]]]]],[11,"catch",E,E,0,[[["self"],[R[17]],[R[8]]],[[R[7]],[R[18],[R[7]]]]]],[11,"eval",E,E,0,[[[R[7]]],[[R[6],[R[1]]],[R[1]]]]]],"p":[[3,R[19]],[3,R[20]],[3,R[21]],[3,R[22]],[3,R[23]],[8,"Source"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);